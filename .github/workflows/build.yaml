name: packages
on:
  push:
    tags:
    - 'v[0-9]+.[0-9]+.[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+a[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+b[0-9]+'
    - 'v[0-9]+.[0-9]+.[0-9]+rc[0-9]+'

jobs:
  conda_build:
    name: Build Conda Packages
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash -l {0}
    env:
      CHANS_DEV: "-c pyviz/label/dev"
      PKG_TEST_PYTHON: "--test-python=py37"
      PYTHON_VERSION: "3.7"
      CHANS: "-c pyviz"
      CONDA_UPLOAD_TOKEN: ${{ secrets.CONDA_UPLOAD_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - uses: conda-incubator/setup-miniconda@v2
        with:
          miniconda-version: "latest"
      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: conda setup
        run: |
          eval "$(conda shell.bash hook)"
          conda config --set always_yes yes --set changeps1 no
          conda update conda
          conda install anaconda-client conda-build
      - name: conda build
        run: |
          eval "$(conda shell.bash hook)"
          conda build conda.recipe/
      - name: conda dev upload
        if: (contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc'))
        run: |
          eval "$(conda shell.bash hook)"
          anaconda --token $CONDA_UPLOAD_TOKEN upload --user pyviz --label=dev $(conda build --output conda.recipe)
      - name: conda main upload
        if: (!(contains(steps.vars.outputs.tag, 'a') || contains(steps.vars.outputs.tag, 'b') || contains(steps.vars.outputs.tag, 'rc')))
        run: |
          eval "$(conda shell.bash hook)"
          anaconda --token $CONDA_UPLOAD_TOKEN upload --user pyviz --label=dev --label=main $(conda build --output conda.recipe)
  pip_build:
    name: Build PyPI Packages
    runs-on: 'ubuntu-latest'
    defaults:
      run:
        shell: bash -l {0}
    env:
      TOX_ENV: "py3.7"
    steps:
      - uses: actions/checkout@v2
      - name: Fetch unshallow
        run: git fetch --prune --tags --unshallow -f
      - uses: actions/setup-python@v2
        with:
          python-version: "3.7"
      - name: env setup
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine tox
      - name: pip build
        run: |
          python setup.py sdist bdist_wheel
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: ${{ secrets.PPU }}
          password: ${{ secrets.PPP }}
          packages_dir: dist/
