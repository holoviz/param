name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'

jobs:
  test_suite:
    name: Tox on ${{ matrix.python-version }}, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: [2.7, 3.6, 3.7, 3.8, 3.9, '3.10', "pypy-3.7"]
    timeout-minutes: 30
    defaults:
      run:
        shell: bash -l {0} 
    env:
      PYTHON_VERSION: ${{ matrix.python-version }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "100"
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Fetch
        run: git fetch --prune --tags
      - name: env setup
        run: |
          set -xe
          python3 -VV
          python3 -m site
          python3 -m pip install --upgrade pip
          python3 -m pip install tox flake8
      - name: lint
        run: flake8
      - name: unit
        run: tox -e py
      - name: unit with_ipython
        run: tox -e with_ipython
      - name: unit with_numpy
        if: (!startsWith(matrix.python-version, 'py'))
        run: tox -e with_numpy
      - name: unit with_pandas
        if: (!startsWith(matrix.python-version, 'py'))
        run: tox -e with_pandas
      - name: unit with_jsonschema
        run: tox -e with_jsonschema
      - name: unit with_gmpy
        if: (contains(matrix.os, 'ubuntu') && !startsWith(matrix.python-version, 'py'))
        run: tox -e with_gmpy
      - name: unit all_deps
        if: (contains(matrix.os, 'ubuntu') && !startsWith(matrix.python-version, 'py'))
        run: tox -e with_all
      - uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true
