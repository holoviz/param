name: tests
on:
  push:
    branches:
      - master
  pull_request:
    branches:
    - '*'
  workflow_dispatch:
  schedule:
    - cron: '0 13 * * SUN'

jobs:
  test_suite:
    name: Tox on ${{ matrix.python-version }}, ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', 'pypy-3.7']
        exclude:
          # Started failing with `Error: The version '3.6' with architecture 'x64' was not found for Ubuntu 22.04.``
          - platform: ubuntu-latest
            python-version: '3.6'
    timeout-minutes: 30
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "100"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: env setup
        run: |
          python -m pip install --upgrade setuptools pip wheel
          python -m pip install "tox<4" tox-gh-actions
      - name: lint
        run: tox -e flakes
      - name: unit
        run: tox
      - name: unit with_ipython
        run: tox -e with_ipython
      - name: unit with_numpy
        if: (!startsWith(matrix.python-version, 'py'))
        run: tox -e with_numpy
      - name: unit with_pandas
        if: (!startsWith(matrix.python-version, 'py'))
        run: tox -e with_pandas
      - name: unit with_jsonschema
        run: tox -e with_jsonschema
      - name: unit with_gmpy
        if: contains(matrix.platform, 'ubuntu') && !startsWith(matrix.python-version, 'py') && matrix.python-version != '3.11'
        run: tox -e with_gmpy
      - name: unit all_deps
        if: contains(matrix.platform, 'ubuntu') && !startsWith(matrix.python-version, 'py') && matrix.python-version != '3.11'
        run: tox -e with_all
      - uses: codecov/codecov-action@v3
        if: github.event_name == 'push'
  test_suite27:
    name: Tox on ${{ matrix.python-version }}, ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        python-version: ['2.7']
    timeout-minutes: 30
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: "100"
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: env setup
        run: |
          python -m pip install --upgrade setuptools pip wheel
          python -m pip install "tox<4" tox-gh-actions
      - name: lint
        run: tox -e flakes
      - name: unit
        run: tox -c tox27.ini
      - name: unit with_ipython
        run: tox -c tox27.ini -e with_ipython
      - name: unit with_numpy
        if: (!startsWith(matrix.python-version, 'py'))
        run: tox -c tox27.ini -e with_numpy
      - name: unit with_pandas
        if: (!startsWith(matrix.python-version, 'py'))
        run: tox  -c tox27.ini -e with_pandas
      - name: unit with_jsonschema
        run: tox -c tox27.ini -e with_jsonschema
      - name: unit with_gmpy
        if: contains(matrix.platform, 'ubuntu') && !startsWith(matrix.python-version, 'py')
        run: tox -c tox27.ini -e with_gmpy
      - name: unit all_deps
        if: contains(matrix.platform, 'ubuntu') && !startsWith(matrix.python-version, 'py')
        run: tox -c tox27.ini -e with_all
      - uses: codecov/codecov-action@v3
        if: github.event_name == 'push'
