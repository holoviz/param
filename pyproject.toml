[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[project]
name = "param"
dynamic = ["version"]
description = "Make your Python code clearer and more reliable by declaring Parameters."
readme = "README.md"
license = { text = "BSD-3-Clause" }
requires-python = ">=3.8"
authors = [
    { name = "HoloViz", email = "developers@holoviz.org" },
]
maintainers = [
    { name = "HoloViz", email = "developers@holoviz.org" },
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries",
]
dependencies = []

[project.optional-dependencies]
examples = [
    "aiohttp",
    "pandas",
    "panel",
]
tests = [
    "pytest",
    "pytest-asyncio",
]
tests-deser = [
    "xlrd",
    "openpyxl",
    "odfpy",
    "pyarrow",
    "tables",
]
tests-examples = [
    "pytest",
    "pytest-asyncio",
    "pytest-xdist",
    "nbval",
    "param[examples]",
]
tests-full = [
    "param[tests]",
    "param[tests-examples]",
    "param[tests-deser]",
    "numpy",
    "pandas",
    "ipython",
    "jsonschema",
    "gmpy",
    "cloudpickle",
    "nest_asyncio",
]
all = [
    "param[tests-full]",
]

[project.urls]
Homepage = "https://param.holoviz.org/"
Tracker = "https://github.com/holoviz/param/issues"
Releases = "https://github.com/holoviz/param/releases"
Source = "https://github.com/holoviz/param"
HoloViz = "https://holoviz.org/"

[tool.hatch.version]
source = "vcs"
raw-options = { version_scheme = "no-guess-dev" }

[tool.hatch.build.targets.wheel]
include = [
    "/param",
    "/numbergen",
]

[tool.hatch.build.targets.sdist]
include = [
    "/param",
    "/numbergen",
    "/tests",
]

[tool.hatch.build.hooks.vcs]
version-file = "param/_version.py"

[tool.pytest.ini_options]
addopts = "--color=yes"
python_files = "test*.py"
filterwarnings = [
  "error",
]
xfail_strict = "true"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="function"

[tool.coverage.report]
omit = ["param/version.py"]

[tool.ruff]
fix = true
include = ["*.py"]

[tool.ruff.lint]
select = ["W", "E", "F"]
ignore = [
    "E402", # Module level import not at top of file
    "E501", # Line too long
    "E701", # Multiple statements on one line
    "E712", # Comparison to true should be is
    "E731", # Do not assign a lambda expression, use a def
    "E741", # Ambiguous variable name
    "F405", # From star imports
]
